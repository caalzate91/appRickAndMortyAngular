{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RickandmortyService {\n  constructor(_http) {\n    this._http = _http;\n    this.api = 'https://rickandmortyapi.com/api/character';\n  }\n  getApi() {\n    return this._http.get(this.api);\n  }\n}\nRickandmortyService.ɵfac = function RickandmortyService_Factory(t) {\n  return new (t || RickandmortyService)(i0.ɵɵinject(i1.HttpClient));\n};\nRickandmortyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RickandmortyService,\n  factory: RickandmortyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["RickandmortyService","constructor","_http","api","getApi","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/macbookpro/Repos/appRickAndMortyAngular/src/app/services/rickandmorty.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RickandmortyService {\n  \n  api: string = 'https://rickandmortyapi.com/api/character'\n\n  constructor( private _http: HttpClient  ) { }\n  \n  getApi(){\n    return this._http.get<any>(this.api)\n  }\n}\n"],"mappings":";;AAMA,OAAM,MAAOA,mBAAmB;EAI9BC,YAAqBC,KAAiB;IAAjB,KAAAA,KAAK,GAALA,KAAK;IAF1B,KAAAC,GAAG,GAAW,2CAA2C;EAEb;EAE5CC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACF,KAAK,CAACG,GAAG,CAAM,IAAI,CAACF,GAAG,CAAC;EACtC;;AARWH,mBAAmB,C;mBAAnBA,mBAAmB,EAAAM,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAnBT,mBAAmB,C;SAAnBA,mBAAmB;EAAAU,OAAA,EAAnBV,mBAAmB,CAAAW,IAAA;EAAAC,UAAA,EAFlB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}